{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOugdsHj0cLDZIbV3bIj5xU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Design a text-based Hangman game. The program\n","selects a random word, and the player guesses one\n","letter at a time to uncover the word. You can set a\n","limit on the number of incorrect guesses allowed.\n"],"metadata":{"id":"MLpNo12SKNki"}},{"cell_type":"code","source":["import random\n","import string\n","\n","def hangman():\n","    \"\"\"\n","    Plays a game of Hangman.\n","    \"\"\"\n","\n","    words = [\"python\", \"java\", \"javascript\", \"c++\", \"ruby\", \"golang\"]\n","    word = random.choice(words)\n","\n","    # Initialize variables\n","    guesses = []\n","    incorrect_guesses = 0\n","    max_incorrect_guesses = 6\n","\n","    while incorrect_guesses < max_incorrect_guesses:\n","        # Display the current state of the word\n","        display_word = \"\"\n","        for letter in word:\n","            if letter in guesses:\n","                display_word += letter\n","            else:\n","                display_word += \"_\"\n","        print(display_word)\n","\n","        # Get the player's guess\n","        guess = input(\"Guess a letter: \").lower()\n","\n","        # Check if the guess is valid\n","        if guess not in string.ascii_lowercase:\n","            print(\"Invalid input. Please enter a letter.\")\n","            continue\n","\n","        # Check if the guess has already been made\n","        if guess in guesses:\n","            print(\"You already guessed that letter.\")\n","            continue\n","\n","        # Check if the guess is correct\n","        if guess in word:\n","            guesses.append(guess)\n","            if display_word == word:\n","                print(\"Congratulations! You won!\")\n","                return\n","        else:\n","            incorrect_guesses += 1\n","            print(\"Incorrect guess. You have\", max_incorrect_guesses - incorrect_guesses, \"tries left.\")\n","\n","    # If the player runs out of guesses, they lose\n","    print(\"Sorry, you lost. The word was:\", word)\n","\n","if __name__ == \"__main__\":\n","    hangman()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OaCqMGGXKbv-","executionInfo":{"status":"ok","timestamp":1729247815115,"user_tz":-300,"elapsed":46044,"user":{"displayName":"Neha Maryam","userId":"12413952574644410495"}},"outputId":"9b235b7f-0ad8-4657-dc0c-5c329bcd8845"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["______\n","Guess a letter: c\n","Incorrect guess. You have 5 tries left.\n","______\n","Guess a letter: p\n","p_____\n","Guess a letter: y\n","py____\n","Guess a letter: t\n","pyt___\n","Guess a letter: h\n","pyth__\n","Guess a letter: o\n","pytho_\n","Guess a letter: n\n","python\n","Guess a letter: \n","Congratulations! You won!\n"]}]}]}